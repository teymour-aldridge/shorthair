// Get Polylux from the official package repository
#import "@preview/polylux:0.4.0": *

// Make the paper dimensions fit for a presentation and the text larger
#set page(paper: "a4", flipped: true)
#set text(size: 25pt, font: "Inter")

#let suffix(number) = [
  #if number == 1 {
    return "st"
  } else if number == 2 {
    return "nd"
  } else if number == 3 {
    return "rd"
  } else {
    return "th"
  }
]

#let table-json(data) = {
  if data.len() == 0 {
    "No data"
  } else {
    let keys = data.at(0).keys()
    text(
      size:16pt,
      table(
        columns: (33.3%, 33.3%, 33.3%),
        inset: (right: 1em, bottom: 1em),
        stroke: none,
        ..data.map(k => (k.name))
      )
    )
  }
}

#let slides(ctx) = [
  #slide[
    #set align(horizon)

    = #text(blue)[Break slides]
    #ctx.tournament_name
  ]

  #slide[
    = Adjudicator break

    #table-json(ctx.adjudicators)
  ]

  #for (name, breaking_teams) in ctx.categories {
    slide[
      #set align(horizon)

      = #name break
    ]

    for breaking_team in breaking_teams {
      slide[
        #set align(horizon)

        #if "break_rank" in breaking_team {
          str("Breaking " + str(breaking_team.break_rank) + str(suffix(breaking_team.break_rank)))

          uncover(2)[#heading(breaking_team.team.long_name)]

          for (i, metric) in breaking_team.metrics.enumerate() {
            uncover(2)[
              #calc.round(metric.value, digits: 2)
              #if i != breaking_team.metrics.len() - 1 {
                metric.metric
                ","
              } else {
                metric.metric
              }
            ];

          }
        } else {
          breaking_team.remark
          heading(breaking_team.team.long_name)
        }
      ]
    }
  }
]

#slides(json("break.json"))
